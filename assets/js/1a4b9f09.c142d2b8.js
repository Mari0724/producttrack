"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[575],{8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const d={},a=r.createContext(d);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},9954:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"backend/models/NutriScanModel","title":"NutriScan Model","description":"Este archivo define los esquemas de validaci\xf3n y tipos TypeScript para el m\xf3dulo NutriScan usando zod. Estos esquemas se usan para validar entradas en endpoints del backend y formularios del frontend, y garantizan que los datos enviados para an\xe1lisis nutricionales sean v\xe1lidos, completos y seguros.","source":"@site/docs/backend/models/NutriScanModel.md","sourceDirName":"backend/models","slug":"/backend/models/NutriScanModel","permalink":"/producttrack/docs/backend/models/NutriScanModel","draft":false,"unlisted":false,"editUrl":"https://github.com/Mari0724/producttrack/docs/backend/models/NutriScanModel.md","tags":[],"version":"current","frontMatter":{"id":"NutriScanModel","title":"NutriScan Model","sidebar_label":"NutriScan Model"},"sidebar":"tutorialSidebar","previous":{"title":"NutriScan DTO","permalink":"/producttrack/docs/backend/models/NutriScanDTO"},"next":{"title":"User DTO","permalink":"/producttrack/docs/backend/models/UserDTO"}}');var d=s(4848),a=s(8453);const i={id:"NutriScanModel",title:"NutriScan Model",sidebar_label:"NutriScan Model"},c="NutriScanModel",t={},o=[{value:"\ud83d\udd0d Ubicaci\xf3n",id:"-ubicaci\xf3n",level:2},{value:"\ud83c\udfaf Prop\xf3sito",id:"-prop\xf3sito",level:2},{value:"\ud83e\udde9 Esquema completo (<code>NutriScanSchema</code>)",id:"-esquema-completo-nutriscanschema",level:2},{value:"\ud83d\udd0d Campos",id:"-campos",level:3},{value:"\ud83e\uddea Esquema de entrada (<code>NutriScanSchemaWithoutUserId</code>)",id:"-esquema-de-entrada-nutriscanschemawithoutuserid",level:2},{value:"\u270f\ufe0f Esquema de actualizaci\xf3n (<code>NutriScanUpdateSchema</code>)",id:"\ufe0f-esquema-de-actualizaci\xf3n-nutriscanupdateschema",level:2},{value:"\ud83e\uddec Tipos generados",id:"-tipos-generados",level:2},{value:"\u2705 Ventajas de usar Zod",id:"-ventajas-de-usar-zod",level:2},{value:"\ud83e\uddfe Ejemplo de validaci\xf3n en backend",id:"-ejemplo-de-validaci\xf3n-en-backend",level:2},{value:"\ud83d\udccc Resumen",id:"-resumen",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"nutriscanmodel",children:"NutriScanModel"})}),"\n",(0,d.jsxs)(n.p,{children:["Este archivo define los ",(0,d.jsx)(n.strong,{children:"esquemas de validaci\xf3n"})," y ",(0,d.jsx)(n.strong,{children:"tipos TypeScript"})," para el m\xf3dulo ",(0,d.jsx)(n.strong,{children:"NutriScan"})," usando ",(0,d.jsx)(n.a,{href:"https://zod.dev/",children:(0,d.jsx)(n.code,{children:"zod"})}),". Estos esquemas se usan para validar entradas en endpoints del backend y formularios del frontend, y garantizan que los datos enviados para an\xe1lisis nutricionales sean v\xe1lidos, completos y seguros."]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-ubicaci\xf3n",children:"\ud83d\udd0d Ubicaci\xf3n"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"src/models/NutriScanModel.ts"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-prop\xf3sito",children:"\ud83c\udfaf Prop\xf3sito"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Validar los datos enviados desde el frontend (evita errores y asegura integridad)."}),"\n",(0,d.jsxs)(n.li,{children:["Facilitar el tipado autom\xe1tico en TypeScript con ",(0,d.jsx)(n.code,{children:"z.infer"}),"."]}),"\n",(0,d.jsx)(n.li,{children:"Estandarizar la estructura del objeto NutriScan para el backend."}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"-esquema-completo-nutriscanschema",children:["\ud83e\udde9 Esquema completo (",(0,d.jsx)(n.code,{children:"NutriScanSchema"}),")"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'export const NutriScanSchema = z.object({\r\n  usuarioId: z.number().int().positive(),\r\n  esAlimento: z.boolean(),\r\n  consulta: z.string().min(1, "La consulta no puede estar vac\xeda"),\r\n  respuesta: z.object({\r\n    mensaje: z.string(),\r\n    generadoPor: z.string(),\r\n  }),\r\n  tipoAnalisis: z.enum(["ocr-gpt-only", "ocr-openfoodfacts-gpt"]),\r\n});\n'})}),"\n",(0,d.jsx)(n.h3,{id:"-campos",children:"\ud83d\udd0d Campos"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Campo"}),(0,d.jsx)(n.th,{children:"Tipo"}),(0,d.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"usuarioId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"ID positivo del usuario. Solo se usa internamente en el backend."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"esAlimento"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Si el an\xe1lisis se refiere a un alimento."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"consulta"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Texto OCR o nombre proporcionado del producto. No puede estar vac\xedo."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"respuesta"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"object"})}),(0,d.jsx)(n.td,{children:"Objeto con el mensaje generado y qui\xe9n lo gener\xf3 (GPT o simulado)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"tipoAnalisis"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"enum"})}),(0,d.jsxs)(n.td,{children:["Tipo de flujo usado: ",(0,d.jsx)(n.code,{children:'"ocr-gpt-only"'})," o ",(0,d.jsx)(n.code,{children:'"ocr-openfoodfacts-gpt"'}),"."]})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"-esquema-de-entrada-nutriscanschemawithoutuserid",children:["\ud83e\uddea Esquema de entrada (",(0,d.jsx)(n.code,{children:"NutriScanSchemaWithoutUserId"}),")"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"export const NutriScanSchemaWithoutUserId = NutriScanSchema.omit({ usuarioId: true });\n"})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:["Este esquema se utiliza para validar entradas que vienen desde el frontend, ya que el ",(0,d.jsx)(n.code,{children:"usuarioId"})," se infiere desde el token del usuario autenticado."]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"\ufe0f-esquema-de-actualizaci\xf3n-nutriscanupdateschema",children:["\u270f\ufe0f Esquema de actualizaci\xf3n (",(0,d.jsx)(n.code,{children:"NutriScanUpdateSchema"}),")"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'export const NutriScanUpdateSchema = z.object({\r\n  consulta: z.string().min(1).optional(),\r\n  esAlimento: z.boolean().optional(),\r\n  tipoAnalisis: z.enum(["ocr-gpt-only", "ocr-openfoodfacts-gpt"]).optional(),\r\n  isTest: z.boolean().optional(),\r\n  respuesta: z.object({\r\n    mensaje: z.string(),\r\n    generadoPor: z.string(),\r\n  }).optional(),\r\n});\n'})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"Permite realizar actualizaciones parciales en los an\xe1lisis ya existentes. Todos los campos son opcionales."}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-tipos-generados",children:"\ud83e\uddec Tipos generados"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"export type NutriScanDTO = z.infer<typeof NutriScanSchema>;\r\nexport type NutriScanDTOInput = z.infer<typeof NutriScanSchemaWithoutUserId>;\r\nexport type NutriScanDTOUpdate = z.infer<typeof NutriScanUpdateSchema>;\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Tipo"}),(0,d.jsx)(n.th,{children:"Uso previsto"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanDTO"})}),(0,d.jsxs)(n.td,{children:["Backend: objeto completo con ",(0,d.jsx)(n.code,{children:"usuarioId"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanDTOInput"})}),(0,d.jsx)(n.td,{children:"Frontend: objeto enviado al crear."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanDTOUpdate"})}),(0,d.jsx)(n.td,{children:"Backend: para actualizaciones parciales."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-ventajas-de-usar-zod",children:"\u2705 Ventajas de usar Zod"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Validaci\xf3n robusta y personalizada con mensajes claros."}),"\n",(0,d.jsx)(n.li,{children:"Generaci\xf3n autom\xe1tica de tipos TypeScript."}),"\n",(0,d.jsx)(n.li,{children:"Esquemas reutilizables en m\xfaltiples capas del sistema."}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-ejemplo-de-validaci\xf3n-en-backend",children:"\ud83e\uddfe Ejemplo de validaci\xf3n en backend"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'import { NutriScanSchema } from "../models/NutriScanModel";\r\n\r\ntry {\r\n  const datosValidados = NutriScanSchema.parse(req.body);\r\n  // datosValidados ahora es seguro para guardar en base de datos\r\n} catch (error) {\r\n  res.status(400).json({ error: error.errors });\r\n}\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-resumen",children:"\ud83d\udccc Resumen"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Elemento"}),(0,d.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanSchema"})}),(0,d.jsxs)(n.td,{children:["Esquema completo, incluye ",(0,d.jsx)(n.code,{children:"usuarioId"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanSchemaWithoutUserId"})}),(0,d.jsxs)(n.td,{children:["Entrada parcial sin ",(0,d.jsx)(n.code,{children:"usuarioId"}),", desde el frontend."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanUpdateSchema"})}),(0,d.jsx)(n.td,{children:"Esquema para actualizaciones parciales de an\xe1lisis."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanDTO"})}),(0,d.jsx)(n.td,{children:"Tipo completo del backend."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanDTOInput"})}),(0,d.jsx)(n.td,{children:"Tipo enviado desde el frontend."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"NutriScanDTOUpdate"})}),(0,d.jsx)(n.td,{children:"Tipo usado al actualizar registros existentes."})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}}}]);